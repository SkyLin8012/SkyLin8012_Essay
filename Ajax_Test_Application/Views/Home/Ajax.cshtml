
@{
    ViewData["Title"] = "Ajax";
}

<h1>Ajax</h1>
<input type="text" id="text1">
<input type="button" id="button1" class="btn btn-success" value="ajax">
<input type ="button" id="buttonE" class="btn btn-danger" value="停止">
<div id="div1" class="alert-info mt-3 p-3 w-25">aaaaa</div>

@section Scripts{
    <script>
        const btn = document.querySelector('#button1');
        const theDiv = document.querySelector('#div1');
        const txt = document.querySelector('#text1');
        const btnStop = document.querySelector("#buttonE");
        //步驟一建立Ajax物件
        const xhr = new XMLHttpRequest();
        
        
        //步驟三接收伺服器回傳的結果
        xhr.addEventListener("load", () => {
            //接收資料
            const data = xhr.responseText;
            //顯示資料
            theDiv.innerHTML = `<h2>${data}</h2>`;
        })

       
        //Ajax Start
        xhr.addEventListener("loadstart", () => {
           btn.textContent = "執行中...";
           btn.setAttribute('disabled','disabled');
           theDiv.innerHTML += `Ajax開始<br>`;
        });
        //Ajax End
        xhr.addEventListener("loadend", () => {
            btn.textContent = "Click";
            btn.removeAttribute('disabled');
            txt.ariaValueMax = "";
            theDiv.innerHTML += `Ajax結束<br>`;
        });
        xhr.addEventListener("timeout", () => {
            theDiv.innerHTML+=`伺服器忙碌中，請稍後再來<br>`
        });

        xhr.addEventListener("abort",()=>{
            theDiv.innerHTML+=`您停止程式的執行`
        })

         btnStop.addEventListener("click", () => {
             xhr.abort(); //停止Ajax的呼叫
        });

        //ajax事件要在外面宣告，以免重複宣告事件
        //click 只保留傳送與設定
        btn.addEventListener('click',()=>{
        //xhr.open("GET", `/api/Index?name=${txt.value}&age=${30}`);         
        //要用URL.Content 才能讀取~
         xhr.open("GET", `@Url.Content("~/api/Index?name=${txt.value}&age=${30}")`);

        xhr.send();
        });

    </script>


}

